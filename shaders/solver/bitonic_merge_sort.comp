#version 460 core

layout(local_size_x = 256) in;

layout (std430, binding = 5) buffer SpatialIndex { ivec4 spatialIndex[]; };


uniform int numEntries;
uniform int groupWidth;
uniform int groupHeight;
uniform int stepIndex;

// Sort the given entries by their keys (smallest to largest)
// This is done using bitonic merge sort, and takes multiple iterations
void main(){
	uint i = gl_GlobalInvocationID.x;

	uint hIndex = i & (groupWidth - 1);
	uint indexLeft = hIndex + (groupHeight + 1) * (i / groupWidth);
	uint rightStepSize = stepIndex == 0 ? groupHeight - 2 * hIndex : (groupHeight + 1) / 2;
	uint indexRight = indexLeft + rightStepSize;

	// Exit if out of bounds (for non-power of 2 input sizes)
	if (indexRight >= numEntries) return;

	uint valueLeft = spatialIndex[indexLeft].y;
	uint valueRight = spatialIndex[indexRight].y;

	// Swap entries if value is descending
	if (valueLeft > valueRight)
	{
		ivec4 temp = spatialIndex[indexLeft];
		spatialIndex[indexLeft] = spatialIndex[indexRight];
		spatialIndex[indexRight] = temp;
	}
}